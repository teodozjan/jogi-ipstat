#!/usr/bin/perl -w



=head1 NAME

  jogi - an perl program exmaining syslog files and sorting it by ip

=cut

use 5.014;

use Getopt::Long;
Getopt::Long::Configure('bundling');
use Jogi::LogParser;
use Jogi::Regex;

my $service;
my $silent;
my %results;

GetOptions(
	   "s|silent" => \$silent,
	   "h|help" => \&help,
	   "t|type=s" => \$service,
	   );
my $path = shift || "-";


say "Run with --help for help\nUsing $path" unless $silent;

open(LOG, "<$path") or die "Could not open \"$path\" :$!\n";
my $regex = &get_regex($service);

while(<LOG>){
    chomp $_;

    next unless /(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})/;
    next unless $_ =~ s/$regex//o;

    push(@{$results{$1}},$_);
}
close(LOG);

=head1 SYNOPSIS

B<jogi> [B<-rnbg>] filename
B<jogi> [B<long options>] filename

=head1 DESCRIPTION

Jogi logfile anaylyzer is perl program that searches given
logfile(by filename or pipe) for B<IP adressess> and prints it to B<stdout>.
There are some options available I<the long> ones and their I<short equivalents>.

  
=head1 OPTIONS

=over 4

=item B<-t>, B<--type>

Changes regex. Available things are B<syslog>(default), B<vsftpd>, B<exim>, B<>

=item B<-h>, B<--help>

Simple but useless help message 

=item B<-s>, B<--silent>

Turns on B<silent mode>. You don't see boring info messages and warnings. Very useful.


=back

=head1 FILTERING

grep man! grep!

=cut



sub help{
print <<EOF
$version

You can mix some of these options if you want to
Usage:
$0 -s /logdir/logfile

Try man $0 or perldoc $0 

EOF
;
exit();
}
#############ENGINE###############
for (keys %results){
    say $_, ":\n", "-" x 80;

    parse_log(@{$results{$_}});

}


